#!/bin/bash

[ -d gh-pages ] || git clone -q --branch gh-pages $(git config --get remote.origin.url) gh-pages
cd gh-pages

# update a PyPI index from PyTorch = https://download.pytorch.org/$d with d=whl or whl/<compute platform>
# this copies the content (main url + follows links to projects) and does 2 updates:
# 1. copies the content in a "simple/" sub-directory to match the convention from PEP 503 simple (that allows other APIs in parallel)
# 2. updates the links to binary packages by adding "https://download.pytorch.org" prefix to PyTorch-provided "/whl/*" path to link back to PyTorch binaries in their home location
function updateIndex() {
  local d=$1

  # will copy source $d to $d/simple
  mkdir -p $d/simple
  local dir="$(pwd)"
  cd $d/simple

  # projects list
  curl -s https://download.pytorch.org/$d/ | grep -v 'TIMESTAMP 1' > index.html
  local count="$(cat index.html | cut -d '>' -f 2 | cut -d '<' -f 1 | grep -cve '^\s*$')"

  echo "https://download.pytorch.org/$d/ => $d/simple/"
  checkCount $d $count 40

  # copy also content of each project
  local i=0
  for p in `cat index.html | cut -d '>' -f 2 | cut -d '<' -f 1`
  do
    mkdir -p $p
    cd $p
    ((i++))
    curl -s https://download.pytorch.org/$d/$p/ \
      | sed -e 's_href="/whl_href="https://download.pytorch.org/whl_' \
      | grep -v 'TIMESTAMP 1' \
      > index.html

    local pcount="$(cat index.html | grep -c 'https://download.pytorch.org/whl/')"
    printf "%5d / $count                   $d/$p/ => $d/simple/$p/ $pcount\n" $i
    checkCount $d/$p $count 1
    cd ..
  done
  echo
  cd "$dir"
}

function checkCount() {
  local content="$1"
  local count="$2"
  local minimum="$3"

  if [ $count -lt $minimum ]
  then
    echo "!!! failing because low packages count for $content: $count (probably intermittent download failure)"
    exit 1
  fi
}

function updateHumanIndexes() {
  cat <<EOF > whl/index.html
<!DOCTYPE html>
<html>
  <body>
    <h1>Sonatype <a href="https://pytorch.org/">PyTorch</a> PyPI improved indexes for <a href="https://help.sonatype.com/en/pypi-repositories.html#download--search--and-install-packages-using-pip">Nexus Repository</a></h1>

Generated by <a href="https://github.com/sonatype-nexus-community/pytorch-pypi">sonatype-nexus-community/pytorch-pypi</a> from <a href="https://download.pytorch.org/whl/">https://download.pytorch.org/whl/</a>
<p>
for the full index, use <code>--index-url <a href="simple">https://sonatype-nexus-community.github.io/pytorch-pypi/whl/simple</code></a>
<p>
You can also use compute platform filtered indexes:
<ul>
$(for d in whl/*
  do
    d="$(echo $d | cut -c 5-)"
    [ -d "whl/$d" ] && [ "$d" != "simple" ] \
      && echo "<li><a href=\"$d\">$d</a></li>"
  done)
</ul>
</body>
</html>
EOF

  for d in whl/*
  do
    d="$(echo $d | cut -c 5-)"
    [ -d "whl/$d" ] && [ "$d" != "simple" ] \
      && cat <<EOF > whl/$d/index.html
<!DOCTYPE html>
<html>
  <body>
    <h1>Sonatype <a href="https://pytorch.org/">PyTorch</a> PyPI improved indexes for <a href="https://help.sonatype.com/en/pypi-repositories.html#download--search--and-install-packages-using-pip">Nexus Repository</a></h1>

Generated by <a href="https://github.com/sonatype-nexus-community/pytorch-pypi">sonatype-nexus-community/pytorch-pypi</a> from <a href="https://download.pytorch.org/whl/$d/">https://download.pytorch.org/whl/$d/</a>
<p>
for $d compute platform index, use <code>--index-url <a href="simple">https://sonatype-nexus-community.github.io/pytorch-pypi/whl/$d/simple</code></a>
<p>
see also <a href="..">other available indexes</a>
</body>
</html>
EOF
  done
}

# update main PyTorch index, that contains everything, whatever the compute platform
updateIndex "whl"

# see resulting updates
git update-index -q --refresh
git diff-index --name-status HEAD

if `git diff-index --quiet HEAD`
then
  echo "no update found in PyTorch main index."
  updateHumanIndexes
  exit 0
fi
echo "updates found in PyTorch main index: updating also compute platform specific ones..."

# get stable platforms from https://download.pytorch.org/whl/torch_stable.html
mapfile -t stable_platforms < <(curl -s https://download.pytorch.org/whl/torch_stable.html | \
  grep -o 'href="[^"]*/[^"]*"' | \
  sed 's|href="||;s|".*||' | \
  grep '/' | \
  cut -d'/' -f1 | \
  sort -u)

declare -A stable_platform_map
for plat in "${stable_platforms[@]}"; do
  stable_platform_map["$plat"]=1
done

# get all platforms from https://download.pytorch.org/whl/torch/
mapfile -t all_platforms < <(curl -s https://download.pytorch.org/whl/torch/ | \
  grep -o '/whl/[a-zA-Z0-9_.-]*/' | \
  sed 's|^/whl/||;s|/.*$||' | \
  sort -u)

# update compute-platform specific indexes: see current "Compute Platforms" on https://pytorch.org/
for d in "${all_platforms[@]}"; do
  if [[ -z ${stable_platform_map["$d"]} ]]; then
    updateIndex "whl/$d"
  fi
done
updateHumanIndexes

du -sh whl/*

for d in whl/simple whl/*/simple ; do echo "$(ls $d | wc -l | xargs) $d" ; done > summary.txt
cat summary.txt
